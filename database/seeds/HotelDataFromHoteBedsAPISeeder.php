<?php

use Illuminate\Database\Seeder;

class HotelDataFromHoteBedsAPISeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {

        //
        /*
         * APITUDE for Activities Sandbox: APITUDE for Activities Evaluation
         * Key: gj35y5vtnqc38znqmmmrad3k
         * Secret: jURav9VUbz
         *
         * APITUDE Hotel Sandbox: Evaluation
         * Key: jty66efkhnfsgwm9qjymbzdk
         * Secret: kre9gM2JRc
         */
// Your API Key and secret
        $apiKey = "jty66efkhnfsgwm9qjymbzdk";
        $Secret = "kre9gM2JRc";
        $username = "maxbiocca";
        $password = "bebrave4soliDPS";

        $i = 0;
        for ($j = 1; $j < 178; $j++) {

            sleep(1);
// Signature is generated by SHA256 (Api-Key + Secret + Timestamp (in seconds))
            $signature = hash("sha256", $apiKey . $Secret . time());

            $i++;

            if ($i == 1) {
                $first = $i;
            } else {
                $first = $second+1;
            }

            $second = $i * 1000;

            $endpoint = "https://api.test.hotelbeds.com/hotel-content-api/1.0/hotels?fields=all&language=ENG&from=$first&to=$second";

            echo $endpoint . '  ';

//            echo "Your API Key is: " . $apiKey . "";
//            echo "Your X-Signature is: " . $signature . "";

// Example of call to the API
            try {
                // Get cURL resource
                $curl = curl_init();
                // Set some options
                curl_setopt_array($curl, array(
                    CURLOPT_RETURNTRANSFER => 1,
                    CURLOPT_URL => $endpoint,
                    CURLOPT_HTTPHEADER => ['Accept:application/json', 'Api-key:' . $apiKey . '', 'X-Signature:' . $signature . '']
                ));
                // Send the request & save response to $resp
                $resp = curl_exec($curl);

                // Check HTTP status code
                if (!curl_errno($curl)) {
                    switch ($http_code = curl_getinfo($curl, CURLINFO_HTTP_CODE)) {
                        case 200:  # OK
//                        echo "Server JSON Response:" . $resp;
                            $response = (json_decode($resp));
                            break;
                        default:
                            echo 'Unexpected HTTP code: ', $http_code, "\n";
                            echo $resp;
                    }
                }

                // Close request to clear up some resources
                curl_close($curl);


            } catch (Exception $ex) {

                printf("Error while sending request, reason: %s\n", $ex->getMessage());

            }

            foreach ($response->hotels as $instance) {
                DB::table('hotelbeds_content')->insert([
                    'whole_request' => gzcompress(serialize($response), 6),
                    'name' => (isset($instance->name->content) ? $instance->name->content : 'Not Available'),
                    'country_code' => (isset($instance->countryCode) ? $instance->countryCode : 'Not Available'),
                    'destination_code' => (isset($instance->destinationCode) ? $instance->destinationCode : 'Not Available'),
                    'address' => (isset($instance->address->content) ? $instance->address->content : 'Not Available'),
                    'city' => (isset($instance->city->content) ? $instance->city->content : 'Not Available'),
                    'postal_code' => (isset($instance->postalCode) ? $instance->postalCode : 'Not Available'),
                    'website' => (isset($instance->web) ? $instance->web : 'Not Available'),
                    'created_at' => DB::raw('now()'),
                    'updated_at' => DB::raw('now()')
                ]);
            }
            dd($instance);
        }

    }
}
